# rubocop:disable all
require File.join('<%= node[:monitor][:shared_lib_path] %>', 'rabbit_api')

class Chef
  class Handler
    class Sensu
      class ReportSensu < Chef::Handler
        def initialize(config = {})
          @rabbit_api = Chef::Handler::Sensu::RabbitAPI.new(
              config[:rabbit_host],
              config[:rabbit_port],
              config[:config_file]
          )
          EM.threadpool_size = 14
          @check = {}
        end

        def report
          EM.run do
            @rabbit_api.setup_rabbitmq

            @check['name'] = 'chef_report'
            @check['handlers'] = 'default'
            @check['standalone'] = true
            @check['issued'] = Time.now.to_i

            @check['interval'] = <%= node[:chef_client][:interval] %>
            @check['refresh'] = @check['interval'] * <%= node[:kt][:report_interval] %>

            if run_status.failed?
              Chef::Log.info("Creating SENSU exception report")
              @check['output'] = "Chef run failed on #{node['fqdn']}.\n"
              @check['output'] << "ERROR: #{run_status.formatted_exception}"
              @check['status'] = 2
            else
              Chef::Log.info("Creating SENSU run report")
              @check['output'] = "Chef run converged on #{node['fqdn']} in #{run_status.elapsed_time} secs."
              @check['status'] = 0
            end

            payload = {
              'client' => node['fqdn'],
              'check' => @check
            }

            @rabbit_api.send_message(payload)
            @rabbit_api.close
          end
        end
      end
    end
  end
end
